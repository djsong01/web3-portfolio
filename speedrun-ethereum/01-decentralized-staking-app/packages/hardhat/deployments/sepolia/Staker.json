{
  "address": "0x5E6579C866fE03293a5D90ecA511C2cf0a8F04Fa",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exampleExternalContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exampleExternalContract",
      "outputs": [
        {
          "internalType": "contract ExampleExternalContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openForWithdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "threshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2c787a9762b515ffb6deed4474a6841719ddc4b65c5a40e6ed2ad88a1cecb2e8",
  "receipt": {
    "to": null,
    "from": "0x40B414c852945d2a03EDaF785469cFD17da6320D",
    "contractAddress": "0x5E6579C866fE03293a5D90ecA511C2cf0a8F04Fa",
    "transactionIndex": 34,
    "gasUsed": "460315",
    "logsBloom": "0x
    "blockHash": "0x551e92302035497ce4bd93acfa3693b239c9bbf4dd8d9f466fcb9a01a2dea990",
    "transactionHash": "0x2c787a9762b515ffb6deed4474a6841719ddc4b65c5a40e6ed2ad88a1cecb2e8",
    "logs": [],
    "blockNumber": 8154560,
    "cumulativeGasUsed": "2970663",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xFebB804A1D9cC0aC7293d4e731B95084b8c9fA5E"
  ],
  "numDeployments": 1,
  "solcInputHash": "70c712bcb01f394303190234858cf131",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exampleExternalContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exampleExternalContract\",\"outputs\":[{\"internalType\":\"contract ExampleExternalContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openForWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staker.sol\":\"Staker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ExampleExternalContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20; //Do not change the solidity version as it negatively impacts submission grading\\n\\ncontract ExampleExternalContract {\\n    bool public completed;\\n\\n    function complete() public payable {\\n        completed = true;\\n    }\\n}\\n\",\"keccak256\":\"0x9d7b4fb853a08a242fd15aab47631e4df4b6a455c781c84a77e5888b9badf359\",\"license\":\"MIT\"},\"contracts/Staker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20; //Do not change the solidity version as it negatively impacts submission grading\\n\\n//import \\\"hardhat/console.sol\\\";\\nimport \\\"./ExampleExternalContract.sol\\\";\\n\\ncontract Staker {\\n    ExampleExternalContract public exampleExternalContract;\\n    uint256 public deadline;\\n    constructor(address exampleExternalContractAddress) {\\n        exampleExternalContract = ExampleExternalContract(exampleExternalContractAddress);\\n        deadline = block.timestamp + 72 hours;\\n    }\\n    modifier notComplete(){\\n        require(!exampleExternalContract.completed(), \\\"Already completed\\\");\\n        _;\\n    }\\n\\n    mapping(address => uint256) public balances;\\n    uint256 public constant threshold = 1 ether;\\n    event Stake(address indexed staker, uint256 amount);\\n\\n    // Collect funds in a payable `stake()` function and track individual `balances` with a mapping:\\n    // (Make sure to add a `Stake(address,uint256)` event and emit it for the frontend `All Stakings` tab to display)\\n    function stake() public payable {\\n        balances[msg.sender] += msg.value;\\n        emit Stake(msg.sender, msg.value);\\n    }\\n\\n    // After some `deadline` allow anyone to call an `execute()` function\\n    // If the deadline has passed and the threshold is met, it should call `exampleExternalContract.complete{value: address(this).balance}()`\\n    bool public openForWithdraw = false;\\n    function execute() public notComplete{\\n        require(block.timestamp >= deadline, \\\"Deadline not reached\\\");\\n        if(address(this).balance >= threshold){\\n            exampleExternalContract.complete{value: address(this).balance}();\\n        }\\n        else{\\n            openForWithdraw = true;\\n        }\\n    }\\n    \\n    // Add a `timeLeft()` view function that returns the time left before the deadline for the frontend\\n    function timeLeft() public view returns(uint256){\\n        if(block.timestamp >= deadline){\\n            return 0;\\n        }\\n        else{\\n            return deadline - block.timestamp;\\n        }\\n    }\\n\\n    // If the `threshold` was not met, allow everyone to call a `withdraw()` function to withdraw their balance\\n    function withdraw() public notComplete{\\n        require(openForWithdraw, \\\"Withdrawals not open\\\");\\n        uint256 amount = balances[msg.sender];\\n        require (amount > 0, \\\"You broke\\\");\\n        balances[msg.sender] = 0;\\n        (bool s, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        require (s, \\\"Failed to send Ether\\\");\\n    }\\n\\n    // Add the `receive()` special function that receives eth and calls stake()\\n    receive() external payable {\\n        stake();\\n    }\\n}\\n\",\"keccak256\":\"0x8b012efcf7bedf38b230f503c014b02336443fac6fd942d8ec923aa9bb462701\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526003805460ff1916905534801561001a57600080fd5b506040516107473803806107478339810160408190526100399161006a565b600080546001600160a01b0319166001600160a01b038316179055610061426203f48061009a565b600155506100c1565b60006020828403121561007c57600080fd5b81516001600160a01b038116811461009357600080fd5b9392505050565b808201808211156100bb57634e487b7160e01b600052601160045260246000fd5b92915050565b610677806100d06000396000f3fe60806040526004361061008a5760003560e01c80633ccfd60b116100595780633ccfd60b1461011157806342cde4e81461012657806361461954146101425780639876a643146101575780639f75f2271461018157600080fd5b80631300a6d11461009e57806327e235e3146100c657806329dcb0cf146100f35780633a4b66f11461010957600080fd5b36610099576100976101b9565b005b600080fd5b3480156100aa57600080fd5b506100b3610214565b6040519081526020015b60405180910390f35b3480156100d257600080fd5b506100b36100e13660046105ad565b60026020526000908152604090205481565b3480156100ff57600080fd5b506100b360015481565b6100976101b9565b34801561011d57600080fd5b50610097610238565b34801561013257600080fd5b506100b3670de0b6b3a764000081565b34801561014e57600080fd5b50610097610427565b34801561016357600080fd5b506003546101719060ff1681565b60405190151581526020016100bd565b34801561018d57600080fd5b506000546101a1906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b33600090815260026020526040812080543492906101d89084906105f3565b909155505060405134815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9060200160405180910390a2565b600060015442106102255750600090565b42600154610233919061060c565b905090565b60008054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad919061061f565b156102f35760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e4818dbdb5c1b195d1959607a1b60448201526064015b60405180910390fd5b60035460ff1661033c5760405162461bcd60e51b81526020600482015260146024820152732bb4ba34323930bbb0b639903737ba1037b832b760611b60448201526064016102ea565b33600090815260026020526040902054806103855760405162461bcd60e51b8152602060048201526009602482015268596f752062726f6b6560b81b60448201526064016102ea565b336000818152600260205260408082208290555190919083908381818185875af1925050503d80600081146103d6576040519150601f19603f3d011682016040523d82523d6000602084013e6103db565b606091505b50509050806104235760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016102ea565b5050565b60008054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049c919061061f565b156104dd5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e4818dbdb5c1b195d1959607a1b60448201526064016102ea565b6001544210156105265760405162461bcd60e51b8152602060048201526014602482015273111958591b1a5b99481b9bdd081c995858da195960621b60448201526064016102ea565b670de0b6b3a7640000471061059e5760008054906101000a90046001600160a01b03166001600160a01b031663522e1177476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561058357600080fd5b505af1158015610597573d6000803e3d6000fd5b5050505050565b6003805460ff19166001179055565b6000602082840312156105bf57600080fd5b81356001600160a01b03811681146105d657600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610606576106066105dd565b92915050565b81810381811115610606576106066105dd565b60006020828403121561063157600080fd5b815180151581146105d657600080fdfea26469706673582212205788719edce561fa36708d2bf34aa498ab788346118761cb5ffdcd10f8dbc5ac64736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80633ccfd60b116100595780633ccfd60b1461011157806342cde4e81461012657806361461954146101425780639876a643146101575780639f75f2271461018157600080fd5b80631300a6d11461009e57806327e235e3146100c657806329dcb0cf146100f35780633a4b66f11461010957600080fd5b36610099576100976101b9565b005b600080fd5b3480156100aa57600080fd5b506100b3610214565b6040519081526020015b60405180910390f35b3480156100d257600080fd5b506100b36100e13660046105ad565b60026020526000908152604090205481565b3480156100ff57600080fd5b506100b360015481565b6100976101b9565b34801561011d57600080fd5b50610097610238565b34801561013257600080fd5b506100b3670de0b6b3a764000081565b34801561014e57600080fd5b50610097610427565b34801561016357600080fd5b506003546101719060ff1681565b60405190151581526020016100bd565b34801561018d57600080fd5b506000546101a1906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b33600090815260026020526040812080543492906101d89084906105f3565b909155505060405134815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9060200160405180910390a2565b600060015442106102255750600090565b42600154610233919061060c565b905090565b60008054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad919061061f565b156102f35760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e4818dbdb5c1b195d1959607a1b60448201526064015b60405180910390fd5b60035460ff1661033c5760405162461bcd60e51b81526020600482015260146024820152732bb4ba34323930bbb0b639903737ba1037b832b760611b60448201526064016102ea565b33600090815260026020526040902054806103855760405162461bcd60e51b8152602060048201526009602482015268596f752062726f6b6560b81b60448201526064016102ea565b336000818152600260205260408082208290555190919083908381818185875af1925050503d80600081146103d6576040519150601f19603f3d011682016040523d82523d6000602084013e6103db565b606091505b50509050806104235760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016102ea565b5050565b60008054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049c919061061f565b156104dd5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e4818dbdb5c1b195d1959607a1b60448201526064016102ea565b6001544210156105265760405162461bcd60e51b8152602060048201526014602482015273111958591b1a5b99481b9bdd081c995858da195960621b60448201526064016102ea565b670de0b6b3a7640000471061059e5760008054906101000a90046001600160a01b03166001600160a01b031663522e1177476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561058357600080fd5b505af1158015610597573d6000803e3d6000fd5b5050505050565b6003805460ff19166001179055565b6000602082840312156105bf57600080fd5b81356001600160a01b03811681146105d657600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610606576106066105dd565b92915050565b81810381811115610606576106066105dd565b60006020828403121561063157600080fd5b815180151581146105d657600080fdfea26469706673582212205788719edce561fa36708d2bf34aa498ab788346118761cb5ffdcd10f8dbc5ac64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 18,
        "contract": "contracts/Staker.sol:Staker",
        "label": "exampleExternalContract",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ExampleExternalContract)12"
      },
      {
        "astId": 20,
        "contract": "contracts/Staker.sol:Staker",
        "label": "deadline",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 55,
        "contract": "contracts/Staker.sol:Staker",
        "label": "balances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 86,
        "contract": "contracts/Staker.sol:Staker",
        "label": "openForWithdraw",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ExampleExternalContract)12": {
        "encoding": "inplace",
        "label": "contract ExampleExternalContract",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}